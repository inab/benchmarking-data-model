{
	"$id": "https://www.elixir-europe.org/excelerate/WP2/json-schemas/2.0/_shared",
	"$schema": "https://json-schema.org/draft/2019-09/schema",
	"title": "OpenEBench Benchmarking Data Model shared schema definitions",
	"definitions": {
		"Metadata": {
			"title": "Platform metadata",
			"description": "This object contains all the metadata needed in the different OpenEBench processing and platform steps. Its contents should be only generated, validated or managed by OpenEBench programs. The keys of the properties in this object must start either with an underscore or with a namespace. This last case could be considered in the future to identify accesory JSON Schemas which help on further validation",
			"type": "object",
			"additionalProperties": true,
			"propertyNames": {
				"pattern": "^(?:[A-Za-z][A-Za-z0-9_-]*:|_)?[A-Za-z][A-Za-z0-9_-]*$"
			}
		},
		"OriginalId": {
			"title": "The original id of the entry",
			"description": "The field is filled in on server side, and it contains the original id in '_id' used on data submission, used by the community",
			"pattern": "^(?![Oo][Ee][Bb]).+$",
			"type": "string",
			"minLength": 1
		},
		"OriginalIdOnSub": {
			"pattern": "^(?![Oo][Ee][Bb]).+$",
			"description": "Identifiers used on submission must not begin with OEB. Client tools must use always this pattern to validate",
			"type": "string",
			"minLength": 1,
			"writeOnly": true
		},
		"Revision": {
			"title": "Entries' revision number",
			"description": "This is a monotonic, incremental counter which changes only when the entry has changed",
			"readOnly": true,
			"type": "integer",
			"minimum": 1
		},
		"Created": {
			"title": "Entries' creation timestamp (internal to the database)",
			"description": "date-time",
			"readOnly": true,
			"type": "string",
			"format": "date-time"
		},
		"Deleted": {
			"title": "Entries' deletion timestamp (internal to the database)",
			"description": "date-time",
			"readOnly": true,
			"type": "string",
			"format": "date-time"
		},
		"Updated": {
			"title": "Entries' last update's timestamp (internal to the database)",
			"description": "date-time",
			"readOnly": true,
			"type": "string",
			"format": "date-time"
		},
		
		"BenchmarkingEventTemporaryId":	{
			"title": "The temporary id of a benchmarking event entry",
			"type": "string",
			"description": "Temporary identifiers internally used must follow this pattern",
			"pattern": "^OEBE[0-9]{3}t[A-Z0-9]{6}$"
		},
		"BenchmarkingEventId": {
			"title": "The id of a benchmarking event entry",
			"type": "string",
			"pattern": "^OEBE[0-9]{3}0[A-Z0-9]{6}$",
			"description": "Identifiers returned by the APIs must follow this pattern"
		},
		"BenchmarkingEventCanonicalId": {
			"title": "The canonical id of a benchmarking event entry",
			"type": "string",
			"description": "Canonical benchmarking event identifiers returned by the APIs must follow this pattern",
			"pattern": "^OEBE[0-9]{3}0[A-Z0-9]{6}\\.[1-9][0-9]*$"
		},
		
		"ChallengeTemporaryId": {
			"title": "The temporary id of a challenge",
			"type": "string",
			"pattern": "^OEBX[0-9]{3}t[A-Z0-9]{6}$",
			"description": "Temporary identifiers internally used must follow this pattern"
		},
		"ChallengeId": {
			"title": "The id of a challenge",
			"type": "string",
			"pattern": "^OEBX[0-9]{3}0[A-Z0-9]{6}$",
			"description": "Identifiers returned by the APIs must follow this pattern"
		},
		"ChallengeCanonicalId": {
			"title": "The canonical id of a challenge",
			"type": "string",
			"description": "Canonical challenge identifiers returned by the APIs must follow this pattern",
			"pattern": "^OEBX[0-9]{3}0[A-Z0-9]{6}\\.[1-9][0-9]*$"
		},
		
		"CommunityCanonicalId": {
			"title": "The canonical id of a community",
			"type": "string",
			"description": "Canonical community identifiers returned by the APIs must follow this pattern, and they do not include the revision",
			"pattern": "^OEBC[0-9]{3}$"
		},
		
		"ContactCanonicalId": {
			"title": "The canonical id of a contact. It must be a valid ORCID",
			"type": "string",
			"description": "Canonical contact identifiers returned by the APIs must follow this pattern, and they do not include the revision",
			"pattern": "^orcid:\\d{4}-\\d{4}-\\d{4}-\\d{3}(\\d|X)$"
		},
		
		"DatasetTemporaryId": {
			"title": "The temporary id of a dataset",
			"type": "string",
			"description": "Temporary identifiers internally used must follow this pattern",
			"pattern": "^OEBD[0-9]{3}t[A-Z0-9]{6}$"
		},
		"DatasetId": {
			"title": "The id of a dataset",
			"type": "string",
			"description": "Identifiers returned by the APIs must follow this pattern",
			"pattern": "^OEBD[0-9]{3}0[A-Z0-9]{6}$"
		},
		"DatasetCanonicalId": {
			"title": "The canonical id of a dataset",
			"type": "string",
			"description": "Canonical dataset identifiers returned by the APIs must follow this pattern",
			"pattern": "^OEBD[0-9]{3}0[A-Z0-9]{6}\\.[1-9][0-9]*$"
		},
		
		"SchemeCanonicalId": {
			"title": "Namespace acronym, corresponds to the namespace part of Curie (ns:id), so it should not contain invalid patterns",
			"type": "string",
			"$comment": "As it was described at https://www.ietf.org/rfc/rfc2396.html#section-3.1",
			"pattern": "^[a-z][a-z0-9+.-]*$"
		},
		
		"MetricsTemporaryId": {
			"title": "The temporary id of a metrics definition",
			"description": "Temporary identifiers internally used must follow this pattern",
			"type": "string",
			"pattern": "^OEBM[0-9]{3}t[A-Z0-9]{6}$"
		},
		"MetricsId": {
			"title": "The id of a metrics definition",
			"description": "Identifiers returned by the APIs must follow this pattern",
			"type": "string",
			"pattern": "^OEBM[0-9]{3}0[A-Z0-9]{6}$"
		},
		"MetricsCanonicalId": {
			"title": "The canonical id of a metrics definition",
			"type": "string",
			"description": "Canonical metrics identifiers returned by the APIs must follow this pattern",
			"pattern": "^OEBM[0-9]{3}0[A-Z0-9]{6}\\.[1-9][0-9]*$"
		},
		
		"ReferenceCanonicalId": {
			"title": "The unique id of the bibliographic reference. It is either its DOI or its PubMedId",
			"type": "string",
			"description": "DOI or PubMed bibliographic identifiers must follow this pattern, and they do not include the revision",
			"pattern": "^(doi:[0-9]{2}\\.[0-9]{4,}/.*)|(pubmed:[1-9][0-9]*)$"
		},
		
		"TestActionTemporaryId": {
			"title": "The temporary id of a test action",
			"type": "string",
			"pattern": "^OEBA[0-9]{3}t[A-Z0-9]{6}$",
			"description": "Temporary identifiers internally used must follow this pattern"
		},
		"TestActionId": {
			"title": "The id of a test action",
			"type": "string",
			"pattern": "^OEBA[0-9]{3}0[A-Z0-9]{6}$",
			"description": "Identifiers returned by the APIs must follow this pattern"
		},
		"TestActionCanonicalId": {
			"title": "The canonical id of a test action",
			"type": "string",
			"description": "Canonical test action identifiers returned by the APIs must follow this pattern",
			"pattern": "^OEBA[0-9]{3}0[A-Z0-9]{6}\\.[1-9][0-9]*$"
		},
		
		"ToolTemporaryId": {
			"title": "The temporary id of a tool",
			"type": "string",
			"description": "Temporary identifiers internally used must follow this pattern",
			"pattern": "^OEBT[0-9]{3}t[A-Z0-9]{6}$"
		},
		"ToolId": {
			"title": "The id of a tool",
			"type": "string",
			"description": "Identifiers returned by the APIs must follow this pattern",
			"pattern": "^OEBT[0-9]{3}0[A-Z0-9]{6}$"
		},
		"ToolCanonicalId": {
			"title": "The canonical id of a tool",
			"type": "string",
			"description": "Canonical tool identifiers returned by the APIs must follow this pattern",
			"pattern": "^OEBT[0-9]{3}0[A-Z0-9]{6}\\.[1-9][0-9]*$"
		},
		
		"CommonKeys": {
			"properties": {
				"_metadata": {
					"$ref": "#/definitions/Metadata"
				},
				"_revision": {
					"$ref": "#/definitions/Revision"
				},
				"_canonical_id": {
					"title": "The canonical id of the entry",
					"description": "The field is filled in on server side, and it contains the canonical id, which is in some cases the content of '_id', plus its revision",
					"readOnly": true,
					"type": "string",
					"minLength": 1,
					"oneOf": [
						{
							"$ref": "#/definitions/BenchmarkingEventCanonicalId"
						},
						{
							"$ref": "#/definitions/ChallengeCanonicalId"
						},
						{
							"$ref": "#/definitions/CommunityCanonicalId"
						},
						{
							"$ref": "#/definitions/ContactCanonicalId"
						},
						{
							"$ref": "#/definitions/DatasetCanonicalId"
						},
						{
							"$ref": "#/definitions/SchemeCanonicalId"
						},
						{
							"$ref": "#/definitions/MetricsCanonicalId"
						},
						{
							"$ref": "#/definitions/ReferenceCanonicalId"
						},
						{
							"$ref": "#/definitions/TestActionCanonicalId"
						},
						{
							"$ref": "#/definitions/ToolCanonicalId"
						}
					]
				},
				"_updated": {
					"$ref": "#/definitions/Updated"
				},
				"_deleted": {
					"$ref": "#/definitions/Deleted"
				},
				"_created": {
					"$ref": "#/definitions/Created"
				}
			}
		},		
		"OrigIdProp": {
			"properties": {
				"orig_id": {
					"title": "The original id of the entry",
					"$ref": "#/definitions/OriginalId"
				}
			}
		},
		"ReferencesProp": {
			"properties": {
				"references": {
					"title": "The related reference id(s) (if any)",
					"type": "array",
					"minItems": 1,
					"items": {
						"type": "string",
						"foreign_keys": [
							{
								"schema_id": "Reference",
								"members": [ "." ]
							}
						],
						"minLength": 1
					}
				}
			}
		},
		"NameDescProp": {
			"properties": {
				"name": {
					"title": "Short community name",
					"minLength": 1,
					"type": "string"
				},
				"description": {
					"title": "Long community, benchmarking event or challenge description, written in Markdown",
					"minLength": 1,
					"type": "string"
				}
			}
		},
		"LinksProp": {
			"properties": {
				"links": {
					"title": "Ways to contact the community. It can be many different ones: public page, a social media link, some public chat, a public mailing list, ...",
					"type": "array",
					"minItems": 1,
					"items": {
						"type": "object",
						"properties": {
							"uri": {
								"title": "The helpdesk mail, main website, social media URL (LinkedIn, Twitter, etc...), public chat URL, etc...",
								"type": "string",
								"pattern": "^(?:mailto|http|https|data|ftp):.*$",
								"format": "uri"
							},
							"label": {
								"title": "The type of URI",
								"type": "string",
								"enum": [
									"HelpDesk",
									"SocialMedia",
									"PublicChat",
									"MainSite",
									"DataSite",
									"Icon",
									"Wallpaper",
									"other"
								]
							},
							"comment": {
								"title": "Internal comment about this URI (useful when the type of URI is other)",
								"type": "string"
							}
						},
						"additionalProperties": false,
						"required": [
							"uri",
							"label"
						]
					}
				}
			}
		}
	}
}
