{
	"$id": "https://www.elixir-europe.org/excelerate/WP2/json-schemas/2.0/TestAction",
	"$schema": "https://json-schema.org/draft/2019-09/schema",
	"title": "Test Action concept (OpenEBench Benchmarking Data Model schemas)",
	"$comment": "allOf and placeholders inspired by https://stackoverflow.com/a/24365393",
	"allOf": [
		{
			"$comment": "It declares _canonical_id, _metadata, _revision, _updated, _deleted, _created",
			"$ref": "_shared#/definitions/CommonKeys"
		},
		{
			"$comment": "Declaration of orig_id",
			"$ref": "_shared#/definitions/OrigIdProp"
		}
	],
	"type": "object",
	"properties": {
		"_id": {
			"title": "The unique id of the test action, according to the rules",
			"type": "string",
			"oneOf": [
				{
					"$ref": "_shared#/definitions/OriginalIdOnSub"
				},
				{
					"$ref": "_shared#/definitions/TestActionTemporaryId"
				},
				{
					"$ref": "_shared#/definitions/TestActionId"
				}
			]
		},
		"_schema": {
			"title": "The JSON schema absolute URI. It must match the value of 'id' in the JSON schema",
			"type": "string",
			"format": "uri",
			"enum": [ "https://www.elixir-europe.org/excelerate/WP2/json-schemas/2.0/TestAction" ]
		},
		
		"orig_id": {
			"$comment": "Placeholder covered by _shared#/definitions/OrigIdProp",
			"title": "The test action original id"
		},
		
		"tool_id": {
			"title": "The id of the processing tool",
			"description": "The id of the tool which processes a set of datasets for this action. Most of the time is a participant's tool, but in the case of aggregation or statistic events, is a tool related to a kind of challenge's metrics",
			"type": "string",
			"foreign_keys": [
				{
					"schema_id": "Tool",
					"members": [ "." ]
				}
			],
			"minLength": 1
		},
		"action_type": {
			"title": "The type of action",
			"description": "The type of action performed by the tool, also describing the kind of input datasets.\nTest Event = Input + Tool -> Participant Data\nMetrics event = Participant Data + Metrics -> Assessment Data\nAggregation event = All Assessment Data + Metrics -> Aggregated Challenge Data\nParticipant Assessments event = Specific Participant Asssement Data + Metrics -> Participant Datasets Data\n",
			"type": "string",
			"enum": [
				"SetupEvent",
				"MetricsEvent",
				"StatisticsEvent",
				"ParticipantAssessmentsEvent",
				"AggregationEvent",
				"TestEvent"
			]
		},
		"involved_datasets": {
			"title": "The incoming, outgoing and settings datasets involved in this test action",
			"type": "array",
			"minItems": 1,
			"items": {
				"type": "object",
				"properties": {
					"dataset_id": {
						"title": "A received dataset, with this id",
						"type": "string",
						"foreign_keys": [
							{
								"schema_id": "Dataset",
								"members": [ "." ]
							}
						],
						"minLength": 1
					},
					"role": {
						"title": "The kind of dataset received for this action (report, metrics_reference, etc...)",
						"type": "string",
						"enum": [
							"incoming",
							"outgoing",
							"settings",
							"unknown"
						]
					},
					"received": {
						"title": "Reception date of the dataset (redundant, as the output dataset already has this date)",
						"type": "string",
						"format": "date-time"
					}
				},
				"additionalProperties": false,
				"required": [ "dataset_id", "role" ]
			}
		},
		"challenge_id": {
			"title": "The id of the challenge where this test action was generated",
			"type": "string",
			"foreign_keys": [
				{
					"schema_id": "Challenge",
					"members": [ "." ]
				}
			],
			"minLength": 1
		},
		"test_contact_ids": {
			"title": "Contact id(s) related to the action",
			"description": "The test action contact id(s), i.e. the runners of the tool and depositors of the results",
			"type": "array",
			"minItems": 1,
			"items": {
				"type": "string",
				"foreign_keys": [
					{
						"schema_id": "Contact",
						"members": [ "." ]
					}
				],
				"minLength": 1
			}
		},
		"status": {
			"title": "The lifecycle of the testAction will be managed by the API, validating it is progressing forward instead of backward",
			"type": "string",
			"enum": [
				"scheduled",
				"sent",
				"incomplete",
				"complete",
				"failed"
			]
		},
		"dates": {
			"title": "Relevant dates for this test action",
			"type": "object",
			"properties": {
				"creation": {
					"title": "Creation date of the test action",
					"type": "string",
					"format": "date-time"
				},
				"modification": {
					"title": "Last modification date of the test action",
					"type": "string",
					"format": "date-time"
				},
				"public": {
					"title": "The date when this test action becomes public",
					"type": "string",
					"format": "date-time"
				}
			},
			"additionalProperties": false,
			"required": ["creation"]
		}
	},
	"unevaluatedProperties": false,
	"required": [
		"_id",
		"_schema",
		"involved_datasets",
		"challenge_id",
		"test_contact_ids",
		"dates"
	],
	"primary_key": ["_id"],
	"dependencies": {}
}
